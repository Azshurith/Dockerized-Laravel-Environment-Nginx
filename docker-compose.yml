version: "3"

services:

    nginx:
        container_name: ${PROJECT}-nginx
        image: nginx:alpine
        restart: unless-stopped
        tty: true
        ports:
            - "8088:80"
            # - "443:443" SSL
        volumes:
            - ./Web:/var/www
            - ./.docker/Nginx/:/etc/nginx/conf.d/
        depends_on:
            - php
            - mariadb
            - phpmyadmin
        networks:
            - shared_network

    php:
        container_name: ${PROJECT}-php
        build:
            context: ./
            dockerfile: ./.docker/Php/Dockerfile
        restart: unless-stopped
        tty: true
        working_dir: /var/www
        volumes:
            - ./Web:/var/www
            - ./.docker/Php/local.ini:/usr/local/etc/php/conf.d/local.ini
        networks:
            - shared_network

    mariadb:
        container_name: ${PROJECT}-database
        image: mariadb
        restart: unless-stopped
        tty: true
        environment:
            MYSQL_ROOT_PASSWORD: ${DB_PASSWORD}
            MYSQL_DATABASE: ${DB_NAME}
            MYSQL_USER: ${DB_USERNAME}
            MYSQL_PASSWORD: ${DB_PASSWORD}
        ports:
            - "3306:3306"
        volumes:
            - database:/var/lib/mysql
            - ./Web:/var/www
            - ./.docker/Mysql/my.cnf:/etc/mysql/my.cnf
        networks:
            - shared_network

    phpmyadmin:
        container_name: ${PROJECT}-phpmyadmin
        image: phpmyadmin/phpmyadmin
        restart: unless-stopped
        tty: true
        ports:
            - "8080:80"
        environment:
            PMA_HOST: mariadb
            MYSQL_ROOT_PASSWORD: ${DB_PASSWORD}
        networks:
            - shared_network

    composer:
        container_name: ${PROJECT}-composer
        image: composer:latest
        restart: unless-stopped
        tty: true
        volumes:
            - ./Web:/var/www
        working_dir: /var/www
        depends_on:
            - php
        command: tail -F anything
        networks:
            - shared_network

    npm:
        container_name: ${PROJECT}-npm
        image: node:latest
        restart: unless-stopped
        tty: true
        ports:
            - "5173:5173"
        volumes:
            - ./Web:/var/www
        working_dir: /var/www
        command: tail -F anything

networks:
    shared_network:
        driver: bridge

volumes:
    database:
        driver: local
